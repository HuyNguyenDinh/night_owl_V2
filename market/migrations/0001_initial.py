# Generated by Django 4.1 on 2022-12-12 10:29

import ckeditor.fields
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=50, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='upload/%Y/%m')),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('balance', models.DecimalField(decimal_places=2, default=0.01, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_business', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CartDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=255)),
                ('unit_in_stock', models.PositiveBigIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('weight', models.PositiveIntegerField(default=1)),
                ('height', models.PositiveIntegerField(default=1)),
                ('width', models.PositiveIntegerField(default=1)),
                ('length', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('can_destroy', models.BooleanField(default=True)),
                ('completed_date', models.DateField(null=True)),
                ('shipping_code', models.CharField(blank=True, max_length=255, null=True)),
                ('total_shipping_fee', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('note', models.TextField()),
                ('status', models.IntegerField(choices=[(0, 'UnCheckout'), (1, 'Approving'), (2, 'Pending'), (3, 'Completed'), (4, 'Canceled')], default=0)),
                ('payment_type', models.IntegerField(choices=[(0, 'COD'), (1, 'OnlinePaymentWithMomo'), (2, 'PaymentWithNightOwlAmount')], default=0)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_order', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='store_order', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_available', models.BooleanField(default=True)),
                ('sold_amount', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('picture', models.ImageField(blank=True, null=True, upload_to='night_owl/product')),
                ('description', ckeditor.fields.RichTextField()),
                ('categories', models.ManyToManyField(to='market.category')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(default='nightowl', max_length=24, unique=True)),
                ('is_percentage', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('products', models.ManyToManyField(to='market.product')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('subject', models.TextField()),
                ('content', ckeditor.fields.RichTextField()),
                ('status', models.IntegerField(choices=[(0, 'pending'), (1, 'checked'), (2, 're_apply'), (3, 'done')], default=0)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.report')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField()),
                ('comment', ckeditor.fields.RichTextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.product')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='night_owl/product')),
                ('product_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.option')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, default=1, max_digits=20, validators=[django.core.validators.MinValueValidator(1)])),
                ('cart_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.cartdetail')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.order')),
                ('product_option', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.option')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='voucher_apply',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.voucher'),
        ),
        migrations.AddField(
            model_name='option',
            name='base_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.product'),
        ),
        migrations.AddField(
            model_name='cartdetail',
            name='product_option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.option'),
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('payed', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order_payed', models.OneToOneField(default=False, on_delete=django.db.models.deletion.CASCADE, to='market.order')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(default='Viet Nam', max_length=100)),
                ('province_id', models.IntegerField()),
                ('district_id', models.IntegerField()),
                ('ward_id', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('full_address', models.TextField(default='ABC')),
                ('note', ckeditor.fields.RichTextField()),
                ('creator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='voucher',
            constraint=models.CheckConstraint(check=models.Q(('is_percentage', True), ('discount__lte', Decimal('100'))), name='percentage_voucher_constraint'),
        ),
        migrations.AddConstraint(
            model_name='voucher',
            constraint=models.CheckConstraint(check=models.Q(('discount__gte', Decimal('0.01000000000000000020816681711721685132943093776702880859375'))), name='min_discount_constraint'),
        ),
        migrations.AddConstraint(
            model_name='rating',
            constraint=models.CheckConstraint(check=models.Q(('rate__gte', 0), ('rate__lte', 5)), name='rate_range_constraint'),
        ),
        migrations.AddConstraint(
            model_name='orderdetail',
            constraint=models.CheckConstraint(check=models.Q(('unit_price__gte', Decimal('1'))), name='min_order_detail_unit_price'),
        ),
        migrations.AddConstraint(
            model_name='orderdetail',
            constraint=models.CheckConstraint(check=models.Q(('quantity__gte', Decimal('1'))), name='min_order_detail_quantity'),
        ),
        migrations.AddConstraint(
            model_name='option',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', Decimal('1'))), name='min_option_price_constraint'),
        ),
        migrations.AddConstraint(
            model_name='option',
            constraint=models.CheckConstraint(check=models.Q(('height__gte', 1), ('length__gte', 1), ('weight__gte', 1), ('width__gte', 1)), name='min_dimension_and_weight_option_constraint'),
        ),
        migrations.AddConstraint(
            model_name='cartdetail',
            constraint=models.CheckConstraint(check=models.Q(('quantity__gte', 1)), name='cart_quantity_constr'),
        ),
        migrations.AlterUniqueTogether(
            name='cartdetail',
            unique_together={('customer', 'product_option')},
        ),
        migrations.AddConstraint(
            model_name='bill',
            constraint=models.CheckConstraint(check=models.Q(('value__gte', Decimal('0'))), name='bill_min_value_constraint'),
        ),
    ]
