image: python:3.10
services:
  - name: postgres
    alias: postgres
  - name: redis:latest
    alias: redis

variables:
  POSTGRES_DB: "night_owl"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_HOST_AUTH_METHOD: trust
  PGDATA: "/var/lib/postgresql/data"
  DB_HOST: postgres
  DB_NAME: night_owl
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_PORT: 5432
  BROKER: redis
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  GIT_CLEAN_FLAGS: -x -f -e public/**

cache:
  untracked: true
  paths:
    - .cache/
    - venv/

migrations:
  stage: build
  before_script:
    - python -V
    - apt-get update && apt-get install -y -q --no-install-recommends build-essential libpq-dev
    - pip install virtualenv
    - python -m venv venv
    - source venv/Script/activate
    - pip install -r requirements.txt
  script:
    - python manage.py makemigrations
    - python manage.py migrate
    - echo "Setup completed"

test:
  stage: test
  before_script:
    - source venv/Script/activate
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - python -m coverage run --source="." manage.py test --parallel
    - python -m coverage json

deploy:
  stage: deploy
  script:
    - echo "Run staging"
    - echo "Run successful"