version: '3.5'

services:
  db:
    image: 'postgres:latest'
    restart: always
    # Optional: Map the container port to a host port to be able to connect with a local db client
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=night_owl
    volumes:
      - ./sql/psql-init:/docker-entrypoint-initdb.d
      - night_owl_postgres_data:/var/lib/postgresql/data/
    networks:
      - backend
  redis_a: &default_redis
    image: redis:latest
    networks:
      - backend
#  redis_b:
#    <<: *default_redis
#  redis_c:
#    << : *default_redis
  app_a: &default_app
    build: &app-build
      context: ../
      dockerfile: docker/app/Dockerfile
    container_name: app_A
    restart: always
    depends_on:
      - db
      - redis_a
#      - redis_b
#      - redis_c
    env_file:
      - .env
    environment: &app_environ
      - CLOUD_NAME=dectbvmyx
      - CLOUD_API_KEY=442698497359214
      - CLOUD_API_SECRET=qlWVxi7gQVA9LjjoXmw0UiPzabg
      - DB_HOST=db
      - DB_NAME=night_owl
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - BROKER=redis_a
      - REDIS_A=redis_a
#      - REDIS_B=redis_b
#      - REDIS_C=redis_c
    networks:
      - backend
    ports:
      - "8008:8008"
    volumes:
      - night_owl_static_volume:/home/web/code/staticfiles
#    command: bash -c "python manage.py makemigrations && python manage.py migrate"
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python -m daphne -b 0.0.0.0 -p 8008 night_owl_market.asgi:application"
#  app_b:
#    <<: *default-app
#    container_name: app_B
#  app_c:
#    <<: *default-app
#    container_name: app_C
  celery_worker_send_mail: &default-worker
    build: *app-build
    container_name: celery_worker_send_mail
    volumes:
      - ../:/home/web/code
    depends_on:
      - db
      - redis_a
      - app_a
    env_file:
      - .env
    environment: *app_environ
    networks:
      - backend
    command: celery -A night_owl_market worker --pool=threads -l INFO -Q send_email -n worker_mail --concurrency=16
  celery_worker_create_order:
    <<: *default-worker
    container_name: celery_worker_create_order
    command: celery -A night_owl_market worker --pool=threads -l INFO -Q create_order -n worker_order --concurrency=16
  celery_worker_refund_order:
    <<: *default-worker
    container_name: celery_worker_refund_order
    command: celery -A night_owl_market worker --pool=threads -l INFO -Q refund_order -n worker_refund_order --concurrency=16
volumes:
  night_owl_postgres_data:
  night_owl_static_volume:
networks:
  backend:
    name: night-owl-be